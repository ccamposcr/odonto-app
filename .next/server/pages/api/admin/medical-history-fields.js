"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/admin/medical-history-fields";
exports.ids = ["pages/api/admin/medical-history-fields"];
exports.modules = {

/***/ "better-sqlite3":
/*!*********************************!*\
  !*** external "better-sqlite3" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("better-sqlite3");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Fmedical-history-fields&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fadmin%2Fmedical-history-fields.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Fmedical-history-fields&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fadmin%2Fmedical-history-fields.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_admin_medical_history_fields_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/admin/medical-history-fields.js */ \"(api)/./pages/api/admin/medical-history-fields.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_admin_medical_history_fields_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_admin_medical_history_fields_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/admin/medical-history-fields\",\n        pathname: \"/api/admin/medical-history-fields\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_admin_medical_history_fields_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmFkbWluJTJGbWVkaWNhbC1oaXN0b3J5LWZpZWxkcyZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGYWRtaW4lMkZtZWRpY2FsLWhpc3RvcnktZmllbGRzLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ3dFO0FBQ3hFO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyx1RUFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsdUVBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2RvbnRvLWFwcC8/NmViMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXMvYXBpL2FkbWluL21lZGljYWwtaGlzdG9yeS1maWVsZHMuanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9hZG1pbi9tZWRpY2FsLWhpc3RvcnktZmllbGRzXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYWRtaW4vbWVkaWNhbC1oaXN0b3J5LWZpZWxkc1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Fmedical-history-fields&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fadmin%2Fmedical-history-fields.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/admin/medical-history-fields.js":
/*!***************************************************!*\
  !*** ./pages/api/admin/medical-history-fields.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! better-sqlite3 */ \"better-sqlite3\");\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(better_sqlite3__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst dbPath = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), \"expedientes.db\");\nfunction handler(req, res) {\n    const db = new (better_sqlite3__WEBPACK_IMPORTED_MODULE_0___default())(dbPath);\n    try {\n        if (req.method === \"GET\") {\n            // Get all medical history fields\n            const fields = db.prepare(`\n        SELECT * FROM medical_history_fields \n        ORDER BY display_order ASC, field_label ASC\n      `).all();\n            res.status(200).json(fields);\n        } else if (req.method === \"POST\") {\n            // Create new medical history field\n            let { field_key, field_label, field_type = \"boolean\", is_active = true, display_order = 0 } = req.body;\n            // Trim text fields\n            field_key = field_key?.toString().trim() || null;\n            field_label = field_label?.toString().trim();\n            // Convert boolean to integer for SQLite\n            is_active = is_active ? 1 : 0;\n            if (!field_label) {\n                return res.status(400).json({\n                    error: \"field_label is required\"\n                });\n            }\n            // Generate field_key if not provided\n            if (!field_key) {\n                let baseKey = field_label.toLowerCase().replace(/[^a-z0-9]/g, \"_\").replace(/_+/g, \"_\").replace(/^_|_$/g, \"\");\n                field_key = baseKey;\n                let counter = 1;\n                // Ensure field_key is unique\n                while(db.prepare(\"SELECT id FROM medical_history_fields WHERE field_key = ?\").get(field_key)){\n                    field_key = `${baseKey}_${counter}`;\n                    counter++;\n                }\n            } else {\n                // Check if provided field_key already exists\n                const existing = db.prepare(\"SELECT id FROM medical_history_fields WHERE field_key = ?\").get(field_key);\n                if (existing) {\n                    return res.status(409).json({\n                        error: \"Field key already exists\"\n                    });\n                }\n            }\n            try {\n                // Begin transaction to ensure atomicity\n                const insertTransaction = db.transaction(()=>{\n                    // If display_order is 1 (new field at top), increment all existing fields\n                    if (display_order === 1) {\n                        db.prepare(`\n              UPDATE medical_history_fields \n              SET display_order = display_order + 1 \n              WHERE display_order >= 1\n            `).run();\n                    }\n                    const result = db.prepare(`\n            INSERT INTO medical_history_fields (field_key, field_label, field_type, is_active, display_order)\n            VALUES (?, ?, ?, ?, ?)\n          `).run(field_key, field_label, field_type, is_active, display_order);\n                    return result;\n                });\n                const result = insertTransaction();\n                const newField = db.prepare(\"SELECT * FROM medical_history_fields WHERE id = ?\").get(result.lastInsertRowid);\n                res.status(201).json(newField);\n            } catch (insertError) {\n                console.error(\"Insert error:\", insertError);\n                return res.status(500).json({\n                    error: \"Error creating field: \" + insertError.message\n                });\n            }\n        } else if (req.method === \"PUT\") {\n            // Update medical history field\n            let { id, field_label, field_type, is_active, display_order } = req.body;\n            // Trim text fields\n            field_label = field_label?.toString().trim() || field_label;\n            // Convert boolean to integer for SQLite if provided\n            if (typeof is_active === \"boolean\") {\n                is_active = is_active ? 1 : 0;\n            }\n            if (!id) {\n                return res.status(400).json({\n                    error: \"id is required\"\n                });\n            }\n            const result = db.prepare(`\n        UPDATE medical_history_fields \n        SET field_label = COALESCE(?, field_label),\n            field_type = COALESCE(?, field_type),\n            is_active = COALESCE(?, is_active),\n            display_order = COALESCE(?, display_order)\n        WHERE id = ?\n      `).run(field_label, field_type, is_active, display_order, id);\n            if (result.changes === 0) {\n                return res.status(404).json({\n                    error: \"Field not found\"\n                });\n            }\n            const updatedField = db.prepare(\"SELECT * FROM medical_history_fields WHERE id = ?\").get(id);\n            res.status(200).json(updatedField);\n        } else if (req.method === \"DELETE\") {\n            // Delete medical history field\n            const { id } = req.query;\n            if (!id) {\n                return res.status(400).json({\n                    error: \"id is required\"\n                });\n            }\n            const result = db.prepare(\"DELETE FROM medical_history_fields WHERE id = ?\").run(id);\n            if (result.changes === 0) {\n                return res.status(404).json({\n                    error: \"Field not found\"\n                });\n            }\n            res.status(200).json({\n                message: \"Field deleted successfully\"\n            });\n        } else {\n            res.setHeader(\"Allow\", [\n                \"GET\",\n                \"POST\",\n                \"PUT\",\n                \"DELETE\"\n            ]);\n            res.status(405).json({\n                error: `Method ${req.method} not allowed`\n            });\n        }\n    } catch (error) {\n        console.error(\"Database error:\", error);\n        res.status(500).json({\n            error: \"Internal server error\"\n        });\n    } finally{\n        db.close();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/admin/medical-history-fields.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fadmin%2Fmedical-history-fields&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fadmin%2Fmedical-history-fields.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();